language: rust
sudo: false
dist: xenial

matrix:
  include:
    # Linux 64bit
    - os: linux
      rust: stable
      compiler: gcc
    #TODO: unlock when libglfw3 on Ubuntu comes with Vulkan support
    # or when we add a GL backend.
    #- os: linux
    #  rust: nightly
    #  compiler: gcc
    # Windows 64bit
    - os: windows
      rust: stable
    - os: windows
      rust: nightly

    # macOS 64bit
    - env: MACOSX_DEPLOYMENT_TARGET=10.9
      os: osx
      rust: stable
      osx_image: xcode9.4
      compiler: clang
    - env: MACOSX_DEPLOYMENT_TARGET=10.9
      os: osx
      rust: nightly
      osx_image: xcode9.4
      compiler: clang

    # iPhoneOS 64bit
    - env: TARGET=aarch64-apple-ios
      os: osx
      osx_image: xcode11
      rust: stable

addons:
  apt:
    packages:
    - cmake
    - libglfw3-dev
  homebrew:
    update: true
    packages:
    - cmake
    - glfw3

branches:
  except:
  - staging.tmp

before_install:
- if [[ $TRAVIS_OS_NAME == "windows" ]]; then choco install make; fi

script:
  - cargo test
  # TODO: enable GL backend
  - (cd wgpu-core && cargo check --all-features)
  - if [[ $TRAVIS_OS_NAME == "osx" ]]; then (cd wgpu-native && cargo check --features vulkan-portability); fi
  - if [[ $TRAVIS_OS_NAME == "linux" ]]; then cargo check --release; fi
  - if [[ $TRAVIS_RUST_VERSION == "nightly" ]]; then cargo +nightly install cbindgen; fi
  - if [[ $TRAVIS_RUST_VERSION == "nightly" ]] && [[ $TRAVIS_OS_NAME == "windows" ]]; then
      wget -nc -O glfw.zip https://github.com/glfw/glfw/archive/3.3.zip &&
      7z x glfw.zip -oglfw &&
      cd glfw/glfw-3.3 &&
      export GLFW3_INCLUDE_DIR=`pwd`/include &&
      export GLFW3_INSTALL_DIR=`pwd`/install &&
      cmake . -DCMAKE_INSTALL_PREFIX=$GLFW3_INSTALL_DIR -DCMAKE_GENERATOR_PLATFORM=x64 &&
      cmake --build . --target install &&
      cd ../.. &&
      export CMAKE_PREFIX_PATH=$GLFW3_INSTALL_DIR &&
      make example-compute example-triangle VERBOSE=1;
    fi
  - if [[ $TRAVIS_RUST_VERSION == "nightly" ]] && [[ $TRAVIS_OS_NAME != "windows" ]]; then make VERBOSE=1; fi
  - if [[ $TRAVIS_RUST_VERSION == "stable" ]]; then make package; fi

deploy:
  provider: releases
  api_key:
    secure: kS8vjHOnLEknb2qxf2dPxMW8S5KcpjSkSgoi23WXiX3DZ2v8DIJMxVLanJhD3mbr1oI1NGXQHrTeeA/HBEEJcOVzlQo38MgNo/Jyt1k4jLRyCEDL0LjO+M1zAQGoEDWlyyjeu+Alw3SFKqGoZeuYDZ/mxUpEapFMD++8w4IjON2fI6iNumcIMeAg3Ns6Y4wHYQPzfIQQf5svI9dh1lf7PhlFB/btONBPi6rXxU/UwCnHBoOPydl5OwjggaUAjCJSf8i/FDLWt5XpvA2UsML2AbcFNuwFhNGhf6ArwEsqgcMCGL6jACetvI/l3ZL96h5dsgzRLW0ruvnvpEm3y3aw9wCjEAcnQMZCBPlIfOpj5MH/guh526QWCVQ3rwRUJOhua9T2yvwda3ICYspyVShzlbwscA9yLwvsuO+6Hl+upuE2IPfLvS6QpnXVlIWHe/3HqOoQggDdsWvnZhhGNKASKsi9vNgTvec/1iX846/KGcV3nYeHIWFrvP0IgWtEqQrgcWj9w6X7LDdaTFmrkKwKnNn4ClLQYPnlWQS71iX0gwRhONGaSAEfFca6vwVTa8AGSQUEHphe5lT7LtAy6UhlbjZNuKvUR+pn+l0EoWlZzm+uxKMtGR+mG9h6My+GA3hCWWtX/Xc94TvuJ1cg+uRu48+rD21vv3cr2fEVDRq7pGg=
  file_glob: true
  file: dist/wgpu-*.zip
  skip_cleanup: true
  overwrite: true
  on:
    tags: true
    condition: $TRAVIS_RUST_VERSION == "stable" && $TRAVIS_BRANCH == $TRAVIS_TAG
    skip_cleanup: true
